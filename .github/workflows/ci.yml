name: Push workflow

on: [push]

jobs:
    build:
      runs-on: ubuntu-latest
  
      steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: 'recursive' # Checkout submodules recursively
          token: ${{ secrets.MY_GITHUB_TOKEN_FOR_PRIVATE_REPOS }}
  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.4'
    
      - name: Export Python path
        run: echo "PYTHON_PATH=$(which python)" >> $GITHUB_ENV

      - name: Install CMake
        run: sudo apt-get install -y cmake

      - name: Install Bazel
        run: |
          sudo apt-get install apt-transport-https curl gnupg
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg
          sudo mv bazel-archive-keyring.gpg /usr/share/keyrings
          echo "deb [signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt-get update && sudo apt-get install bazel

      - name: Build PyMatching with Bazel
        run: |
          cd libs/PyMatching
          bazel build //:libpymatching
          cd ../..

      - name: Find Python Include Path
        run: |
          PYTHON_INCLUDE_PATH=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")
          echo "PYTHON_INCLUDE_PATH=$PYTHON_INCLUDE_PATH" >> $GITHUB_ENV
      
      - name: Build C++ package
        run: |
          cmake -DPYTHON_INCLUDE_DIR=$PYTHON_INCLUDE_PATH -DPYBIND11_INCLUDE_DIR=${{ github.workspace }}/libs/pybind11/include -DPython3_EXECUTABLE=$PYTHON_PATH . 
          make
      

      - name: Install local qiskit_qec package
        run: pip install ./libs/qiskit-qec
        
      - name: Cache pipenv virtual environment
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-
  
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
  
      - name: Install dependencies with pipenv
        run: |
          pipenv install --dev
  
      - name: Test with pytest using pipenv
        run: |
          pipenv run pytest tests/
  